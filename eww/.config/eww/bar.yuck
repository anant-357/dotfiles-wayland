(defpoll bluetooth_status 
    :interval "1000ms"
    :initial `sh ~/.config/eww/scripts/bluetooth.sh`
    `sh ~/.config/eww/scripts/bluetooth.sh`
)

(defwidget _bluetooth [] (label
    :class "py-md my-md bg fg round-sm-px bold font-16 mb-sm mx-sm"
    :tooltip "Battery: ${bluetooth_status.battery}%"
    :text "${bluetooth_status.icon}"))

(defwidget _battery [] (label 
    :class "py-md my-md bg fg round-md-pc mx-sm" 
    :tooltip "${EWW_BATTERY["BAT1"]["capacity"]} %" 
    :text {EWW_BATTERY["BAT1"]["capacity"] > 90 ? 
        "󰁹" : EWW_BATTERY["BAT1"]["capacity"] > 80 ? 
        "󰂂" : EWW_BATTERY["BAT1"]["capacity"] > 70 ? 
        "󰂀" : EWW_BATTERY["BAT1"]["capacity"] > 60 ? 
        "󰁿" : EWW_BATTERY["BAT1"]["capacity"] > 50 ? 
        "󰁾" : EWW_BATTERY["BAT1"]["capacity"] > 40 ? 
        "󰁽" : EWW_BATTERY["BAT1"]["capacity"] > 30 ? 
        "󰁼" : EWW_BATTERY["BAT1"]["capacity"] > 20 ? 
        "󰁻" : EWW_BATTERY["BAT1"]["capacity"] > 10 ? 
        "󰁺" : "󰂎" }))

(defwidget _net [] (label 
    :class "py-md my-md bg fg round-md-pc mx-sm" 
    :text "󰓅" 
    :tooltip "${round(EWW_NET['wlp0s20f3']['NET_DOWN']/1024, 2)} KB/s"))

(defwidget _ram [] (label
    :class "py-md my-md bg fg round-md-pc mx-sm" 
    :text "󰍛"
    :tooltip "${round(EWW_RAM["used_mem"]/(1024*1024*1024), 2)}GB/ ${round(EWW_RAM["total_mem"]/(1024*1024*1024), 2)}GB"
))

(defpoll workspaces 
    :interval "100ms" 
    :initial `niri msg -j workspaces | jq -r 'sort_by(.id)'` 
    `niri msg -j workspaces | jq -r 'sort_by(.id)'`)

(defwidget _workspaces [] (box 
                            :class "ewwbar-workspaces" 
                            :orientation "v" 
                            :hexpand false 
                            (for ws in workspaces 
                                (button 
                                    :class {ws["is_active"] == true ? 
                                    "my-sm ewwbar-workspace active-workspace" : "ewwbar-workspace"} 
                                    :on-click "niri msg action focus-workspace ${ws['idx']}" 
                                    {ws["is_active"] == true ? "󰺕": "" }))))

(defwindow bar 
    :monitor 0
    :geometry (geometry 
                :x "0%" 
                :y "0%" 
                :width "34px" 
                :height "96%" 
                :anchor "left center")
    :stacking "fg"
    :exclusive true
    :namespace "bar"
    (box 
        :orientation "v" 
        (box 
            :orientation "v" 
            :valign "start" 
            :space-evenly false )
        (box 
            :orientation "v" 
            :valign "center" 
            :space-evenly false 
            (_workspaces))
        (box 
            :orientation "v" 
            :valign "end" 
            :space-evenly false
            (_bluetooth) (_net) (_ram) (_battery))
    )
)
