(defvar space 20)

(defvar NAME "Anant")
(defvar UNAME "zinnia")

(defwidget _empty []
  (label :text " ")
)

(defwidget _profile []
  (box :class "profile" :orientation "vertical" :space-evenly false
    (label :class "profile-photo" :halign "center"  :text "󰞦")
    (label :class "fullname" :halign "center"  :text NAME)
    (label :class "username" :halign "center" :text UNAME)
  )
)

(defpoll time :interval "5s"
  "date +'{\"hour\":\"%-H\",\"min\":\"%-M\",\"month\":\"%B\",\"year\":\"%Y\",\"day\":\"%A\" , \"date\":\"%-d\"}'")

(defwidget _time []
  (box :class "time" :orientation "vertical"
    (label :class "time" :valign "center" :text "${time.hour}:${time.min}")
    (label :class "day" :valign "center" :text "${time.day}, ${time.month} ${time.year}")))


(defwidget _uptime []
  (box :class "uptime"
    (label :class "uphour" :text "${time.day}")))



(defpoll SONG :interval "1s" `scripts/music song`)
(defpoll ARTIST :interval "1s" `scripts/music artist`)
(defpoll STATUS :interval "0.1s" `scripts/music status`)
(defpoll CURRENT :interval "0.001s" `scripts/music time`)
(defpoll COVER :interval "1s" `scripts/music cover`)

(defwidget _music []
  (box :class "music-box" :orientation "horizontal" :space-evenly false
    (_cover)
    (box :class "music" :orientation "vertical" :space-evenly true :spacing 15
      (label :halign "center" :class "song" :limit-width 30 :text SONG)
      (label :halign "center" :class "artist" :text ARTIST)
      (box :orientation "horizontal" :spacing 20 :halign "center" :space-evenly true :vexpand false :hexpand false
        (button :class "btn_prev" :timeout "5s" :onclick "./scripts/music prev" "")
        (button :class "btn_play" :timeout "5s" :onclick "./scripts/music toggle" STATUS)
        (button :class "btn_next" :timeout "5s" :onclick "./scripts/music next" ""))
      ; 󰙡󰙣
      (box :class "music_bar" :halign "center" :vexpand false :hexpand false
        (scale :min 0 :active true :max 100 :value CURRENT))
    )
  )
)
(defwidget _cover []
  (image :class "cover" :path COVER :image-width 250)
)

(defpoll ICON :interval "10s" `scripts/weather_info --icon`)
(defpoll STAT :interval "10s" `scripts/weather_info --stat`)
(defpoll TEMP :interval "10s" `scripts/weather_info --temp`)
(defpoll HEX :interval "10s" `scripts/weather_info --hex`)
(defpoll QUOTE :interval "10s" `scripts/weather_info --quote`)
(defpoll QUOTE2 :interval "10s" `scripts/weather_info --quote2`)


(defwidget _weather []
  (box :class "weather" :orientation "vertical" :spacing 20 :space-evenly "false" :hexpand true
    (box :orientation "horizontal"
      (box :orientation "horizontal" :halign "end" :spacing -18
        (label :class "location_icon" :text "") (label :class "location" :text "Guwahati"))
    )
    (box :orientation "horizontal"
      (label :class "weather_icon" :halign "start" :text ICON)
      (label :class "temperature" :halign "center" :text TEMP))
    (box :orientation "vertical" :spacing 10 :halign "center" :space-evenly "false"
      (label :class "stat" :text STAT)
      (label :class "quote" :text QUOTE)
      (label :class "quote" :text QUOTE2))))


; (defwidget _firefox []
  ;   (button :style "background-image: url('./images/firefox.svg');" :class "app" :onclick "firefox"))

; (defwidget _discord []
  ;   (button :class "app" :style "background-image: url('images/discord.png');"  :onclick "discord"))

; (defwidget _gmail []
  ;   (button :style "background-image: url('./images/gmail.svg');" :class "app" :onclick "gmail"))

; (defwidget _terminal []
  ;   (button :style "background-image: url('./images/terminal.svg');" :class "app" :onclick "wezterm"))

; (defwidget _spotify []
  ;   (button :style "background-image: url('./images/spotify.png');" :class "app" :onclick "spotify"))

; (defwidget _folder []
  ;   (button :style "background-image: url('./images/folder.svg');" :class "app" :onclick "folder"))


(defwidget _firefox []
  (button  :class "app firefox" :onclick "firefox" "󰈹"))

(defwidget _discord []
  (button  :class "app discord":onclick "discord" "󰙯"))

(defwidget _gmail []
  (button :class "app mail" :onclick "gmail" ""))

(defwidget _terminal []
  (button :class "app terminal" :onclick "wezterm" ""))

(defwidget _spotify []
  (button :class "app spotify" :onclick "spotify" ""))

(defwidget _folder []
  (button :class "app folder" :onclick "folder" "󰉋"))


(defwidget _apps []
  (box :class "apps" :orientation "vertical" :spacing 35 :halign "center" :space-evenly true
    (_terminal)
    (_firefox)
    (_spotify)
    (_gmail)
    (_folder)
    (_discord)
  ))

(defpoll HOST :interval "5s" `hostname`)
(defpoll CPU_USAGE :interval "1s" `scripts/sys_info zcpu`)
(defpoll MEM_USAGE :interval "1s" `scripts/sys_info memory`)
(defpoll BLIGHT :interval "1s" `scripts/sys_info brightness`)
(defpoll BATTERY :interval "5s" `scripts/sys_info battery`)
(defpoll VOLUME :interval "5s" `scripts/sys_info volume`)

(defwidget _system []
  (box :orientation "horizontal" :spacing 20
    (box :class "cpu_bar" :orientation "v" :spacing 35 :space-evenly false
      (scale :orientation "vertical" :flipped true :value CPU_USAGE :active "false")
      (label :class "cpu_icon" :text "")
    )
    (box :class "cpu_bar" :orientation "v" :spacing 35 :space-evenly false
      (scale :orientation "vertical" :min 0 :max 100 :flipped true  :value MEM_USAGE :active "false")
      (label :class "cpu_icon" :text "")
    )
    (box :class "cpu_bar" :orientation "v" :spacing 35 :space-evenly false
      (scale :orientation "vertical" :min 0 :max 100 :flipped true :value BATTERY :active "false")
      (label :class "cpu_icon" :text "")
    )
    (box :class "cpu_bar" :orientation "v" :spacing 35 :space-evenly false
      (scale :orientation "vertical" :min 0 :max 100 :flipped true :value VOLUME :active "false")
      (label :class "cpu_icon" :text "")
    )
    (box :class "cpu_bar" :orientation "v" :spacing 35 :space-evenly false
      (scale :orientation "vertical" :min 0 :max 100 :flipped true :value BLIGHT :active "false")
      (label :class "cpu_icon" :text "")
    )
    
  )
)

(defpoll BACK :interval "200s" :initial `cat ~/.cache/wal/wal` `cat ~/.cache/wal/wal`)
(defwidget _back []
  (box :class "back" :style "background-image: url('${BACK}')" :width 720 )
)


(defwidget _close_dashboard []
  (button :class "close" :onclick "eww close dashboard" ""))


(defwidget _dashboard []
  (box :class "layout-grid" :space-evenly true :orientation "horizontal" :spacing space
    (box :class "column" :space-evenly false :orientation "vertical" :spacing space
      (box :class "widget" (_time))
      (box :class "row" :space-evenly false :orientation "horizontal" :spacing space
        (box :class "column" :space-evenly false :orientation "vertical" :spacing space
          (box :class "widget" (_apps))
        )
        (box :class "column" :space-evenly false :orientation "vertical" :spacing space
          (box :class "widget back" (_back))
          (box :class "widget" (_music))
        )
      )
    )
    (box :class "column" :space-evenly false :orientation "vertical" :spacing space
      (box :class "row" :space-evenly false :orientation "horizontal" :spacing 200 :halign "center"
        (label :class "welcome"  :text "Good Morning, ${UNAME}")
        (box :class "widget" (_close_dashboard))
      )
      (box :class "row" :space-evenly true :orientation "horizontal" :spacing space :hexpand true
        (box :class "widget"   (_weather))
        
      )
      (box :class "row" :space-evenly false :orientation "horizontal" :spacing space
        (box :class "widget system"  (_system))
        
      )
      
    )
    
  )
)



(defwindow dashboard :stacking "fg" :focusable false :screen 1
  :geometry (geometry :x 0 :y 0 :width "100%" :height "100%")
  (_dashboard))



