(defvar essid false)
(defpoll wifi :interval "1s" :initial `eww-wifi` `eww-wifi`)
(defwidget _bottombar_wifi []
		(eventbox :class "bottombar-wifi" 
				:onhover "eww update essid=true"
				:onhoverlost "eww update essid=false"
				(box :space-evenly false
						(label :class "bottombar-wifi-symbol" :text "${wifi["symbol"]}")
						(revealer :transition "slideright" :reveal essid
								(label :class "bottombar-essid-text" :valign "center" :text {wifi["tooltip"]})
						)
				)
		)
)

(defvar workspaces "[1, 2, 3, 4, 5, 6, 7, 8, 9]")
(defpoll current_ws
    :interval "1ms"
    `swaymsg -t get_workspaces | jq -r '.[] | select(.focused).name'`)

(defwidget workspace_switcher []
    (box :class "ewwbar-workspaces" :orientation "h" :space-evenly false :hexpand false :halign "start"
        (for ws in workspaces
            (button 
                :class "ewwbar-workspace ${ws == current_ws ? "active-workspace" : ""}"
                :onclick "swaymsg workspace ${ws}"
                {ws == current_ws ? "" : ""}
            )
        )
    )
)

(defvar music_name false)
(defwidget _bottombar_music []
		(box :class "bottombar-music" :orientation "horizontal" :hexpand true :halign "end" :space-evenly false :valign "center"
				(eventbox :class "eventbox"
						:onhover "eww update music_name=true"
						:onhoverlost "eww update music_name=false"
						(box :space-evenly false
								(label :class "bottombar-music-icon" :text "󰓇 ")
								(revealer :transition "slideleft" :reveal music_name
										(label :class "bottombar-music-name" :valign "center" :limit-width 16 :text "${SONG}")
								)
						)
				)
		)
)



(defvar battery_percentage false)
(defpoll battery :interval "1s" :initial `eww-battery` `eww-battery`)
(defwidget _bottombar_battery []
		(eventbox :class "bottombar-battery" 
				:onhover "eww update battery_percentage=true"
				:onhoverlost "eww update battery_percentage=false"
				(box :space-evenly false
						(label :class "bottombar-battery-symbol"  :text {battery["symbol"]})
						(revealer :transition "slideright" :reveal battery_percentage
								(label :class "bottombar-battery-percentage" :valign "center" :text {battery["percentage"]} )
						)
				)
    )
)


(defvar volume_percentage false)
(defpoll volume :interval "1s" :initial `eww-volume` `eww-volume`)
(defwidget _bottombar_volume []
		(eventbox :class "bottombar-volume" 
				:onhover "eww update volume_percentage=true"
				:onhoverlost "eww update volume_percentage=false"
				(box :space-evenly false
						(label :class "bottombar-volume-symbol reveal-${volume_percentage}"  :text {volume["text"]})
						(revealer :transition "slideright" :reveal volume_percentage
								(label :class "bottombar-volume-percentage" :valign "center" :text "${volume["tooltip"]}%" )
						)
				)
    )
)


(defvar bluetooth_name false)
(defpoll bluetooth :interval "1s" :initial `eww-bluetooth` `eww-bluetooth`)
(defwidget _bottombar_bluetooth []
		(eventbox :class "bottombar-bluetooth" 
				:onhover "eww update bluetooth_name=true"
				:onhoverlost "eww update bluetooth_name=false"
				(box :space-evenly false
						(label :class "bottombar-bluetooth-symbol reveal-symbol-${bluetooth_name}"  :text {bluetooth["text"]})
						(revealer :transition "slideright" :reveal bluetooth_name
								(label :class "bottombar-bluetooth-name reveal-tooltip-${bluetooth_name}" :valign "center" :text "${bluetooth["tooltip"]}" )
						)
				)
    )
)

(defpoll mode :interval "1ms" :initial `swaymsg -t get_binding_state | jq -r '.name'` `swaymsg -t get_binding_state | jq -r '.name'`)

(defwidget _bottombar_mode []
		(label :class "bottombar-mode" :text mode)
)

(defwidget _bottombar []
		(box :orientation "horizontal" 
		(box :orientation "horizontal" :halign "start" :space-evenly false :class "bottombar-layout"
				(_bottombar_mode)
				(_bottombar_music)
		)
		(box :orientation "horizontal" :halign "center" :space-evenly false :class "bottombar-layout"
				(workspace_switcher)
		)
		(box :orientation "horizontal" :halign "end" :space-evenly false :class "bottombar-layout"
				(_bottombar_wifi)
				(_bottombar_bluetooth)
				(_bottombar_volume)
				(_bottombar_battery)
		))
)

(defwindow bottombar  :monitor 0 :stacking "bottom" :exclusive true :namespace "bottombar" :geometry (geometry :x 0 :y 0 :width "100%" :height "40px" :anchor "bottom center") (_bottombar))
