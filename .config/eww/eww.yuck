(include "./powermenu.yuck")
(include "./screenshotmenu.yuck")
(include "./bar.yuck")

(defpoll music_data
         :interval "50ms"
         :initial `eww-spotify status`
         `eww-spotify status`
         )

(defvar music_show false)

(defwidget _music []
           (box
            :orientation "horizontal"
            :class "music-box"
            (image :class "music-cover" :path "/home/fisher/.config/eww/${music_data['art']}" :image-width 200)
            (box :orientation "vertical" :class "music-data-box"
                 (label :class "music-text music-text-title" :limit-width "18" :text {music_data["song"]})
                 (label :class "music-text music-text-artist" :text {music_data["artist"]})
                 (box :orientation "horizontal" :class "music-button-box"
                      (button :class "music-button" :onclick `eww-spotify previous` "󰒮")
                      (button :class "music-button" :onclick `eww-spotify toggle` {music_data["symbol"]})
                      (button :class "music-button" :onclick `eww-spotify next` "󰒭")
                      
                      )
                 )) 
                
           )

(defwindow music
           :monitor 0
           :geometry (geometry :x "30px" :y "30px" :width "150px" :height "150px" :anchor "top left")
           :stacking "bg"
           :exclusive false
           :focusable false
           :namespace "ewwmusic"
           (_music)
           )

(defwidget _music []
           (box
            :orientation "horizontal"
            :class "music-box"
            (image :class "music-cover" :path "/home/fisher/.config/eww/${music_data['art']}" :image-width 200)
            (box :orientation "vertical" :class "music-data-box"
                 (label :class "music-text music-text-title" :limit-width "18" :text {music_data["song"]})
                 (label :class "music-text music-text-artist" :text {music_data["artist"]})
                 (box :orientation "horizontal" :class "music-button-box"
                      (button :class "music-button" :onclick `eww-spotify previous` "󰒮")
                      (button :class "music-button" :onclick `eww-spotify toggle` {music_data["symbol"]})
                      (button :class "music-button" :onclick `eww-spotify next` "󰒭")
                      
                      )
                 )) 
                
           )

(defwindow now
           :monitor 0
           :geometry (geometry :x "1500px" :y "30px" :width "150px" :height "150px" :anchor "top left")
           :stacking "bg"
           :exclusive false
           :focusable false
           :namespace "ewwmusic"
           (_music)
           )
